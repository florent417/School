#Making for host
# > make ARCH=host
ifeq (${ARCH},host)
CXX=g++
EXE_PROG=bin/host
BUILD_DIR=build/host
endif

#Making for targets
# > make ARCH=target
ifeq (${ARCH},target)
CXX=arm-rpizw-g++
EXE_PROG=bin/target
BUILD_DIR=build/target
endif

SOURCES=main.cpp part1.cpp part2.cpp
OBJECTS=$(addprefix $(BUILD_DIR)/, $(SOURCES:.cpp=.o))
DEPS=$(addprefix $(BUILD_DIR)/, $(SOURCES:.cpp=.d))
CXXFLAGS=-I

# << Check the $(DEPS) new dependency
$(EXE): $(DEPS) $(OBJECTS)$(CXX)
	$(CXXFLAGS) -o $(EXE_PROG)/$@ $(OBJECTS)

${BUILD_DIR }/%.o: %.cpp
	$(CXX) -cpp $^ -o $@

# Rule that describes how a .d
# (dependency) file is created from
# a .cpp file
# Similar to the assigment that you
# just completed %.cpp -> %.o
${BUILD_DIR }/%.d: %.cpp
	$(CXX) -MT$(addprefix $(BUILD_DIR)/,$(@:.d=.o)) -MM $(CXXFLAGS) $^ > $@

clean:
	rm -r BUILD_DIR EXE_PROG

ifneq ($(MAKECMDGOALS),clean)
-include $(DEPS)
endif
